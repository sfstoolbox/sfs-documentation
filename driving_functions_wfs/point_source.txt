.. _sec-driving-functions-wfs-point-source:

Point Source
~~~~~~~~~~~~

.. plot::
    :context: close-figs

    xs = 0, 2.5, 0  # position of source
    omega = 2 * np.pi * 1000  # frequency
    xref = 0, 0, 0  # 2.5D reference point
    x0, n0, a0 = sfs.array.circular(200, 1.5)
    grid = sfs.util.xyz_grid([-1.75, 1.75], [-1.75, 1.75], 0, spacing=0.02)
    d = sfs.mono.drivingfunction.wfs_25d_point(omega, x0, n0, xs, xref)
    a = sfs.mono.drivingfunction.source_selection_point(n0, x0, xs)
    twin = sfs.tapering.tukey(a,.3)
    p = sfs.mono.synthesized.generic(omega, x0, n0, d * twin * a0 , grid,
        source=sfs.mono.source.point)
    normalization = 1.3
    sfs.plot.soundfield(normalization * p, grid);
    sfs.plot.secondarysource_2d(x0, n0, grid)

.. _fig-wfs-25d-point-source:

.. figure:: ../img/placeholder.png
    :align: center

    Sound pressure for a monochromatic point source synthesized with 2.5D
    |WFS| :eq:`D.wfs.ps.2.5D`.  Parameters: :math:`\xs = (0, 2.5, 0)` m,
    :math:`\xref = (0, 0, 0)`, :math:`f = 1` kHz.

By inserting the source model for a point source :eq:`S.ps` into :eq:`D_wfs`
it follows

.. math::
    :label: D.wfs.ps.woapprox

    D(\x_0,\w) =
        \frac{1}{2\pi} A(\w) w(\x_0) \i\wc
        \left(1 + \frac{1}{\i\wc|\x_0-\xs|} \right)
        \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^2}
        \e{-\i\wc |\x_0-\xs|}.

Under the assumption of :math:`\wc |\x_0-\xs| \gg 1`,
:eq:`D.wfs.ps.woapprox` can be approximated by [Schultz2016]_, eq. (2.118)

.. math::
    :label: D.wfs.ps

    D(\x_0,\w) = \frac{1}{2\pi} A(\w) w(\x_0) \i\wc
        \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^2}
        \e{-\i\wc |\x_0-\xs|}.

It has the advantage that its temporal domain version could again be implemented
as a simple weighting- and delaying-mechanism.

To reach at 2.5D for a point source, we will start in 3D and apply stationary
phase approximations instead of directly using :eq:`D25D_wfs` -- see discussion
after [Schultz2016]_, (2.146). Under the assumption of :math:`\frac{\omega}{c}
(|\x_0-\xs| + |\x-\x_0|) \gg 1` it then follows [Schultz2016]_, eq. (2.137),
[Start1997]_, eq. (3.10, 3.11)

.. math::
    :label: D.wfs.ps.2.5D

    D_\text{2.5D}(\x_0,\w) =
        \frac{1}{\sqrt{2\pi}} A(\w) w(\x_0) \sqrt{\i\wc}
        \sqrt{\frac{|\xref-\x_0|}{|\xref-\x_0|+|\x_0-\xs|}}
        \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^{\frac{3}{2}}}
        \e{-\i\wc |\x_0-\xs|},

whereby :math:`\xref` is a reference point at which the synthesis is correct.
A second stationary phase approximation can be applied to reach at
[Schultz2016]_, eq. (2.131, 2.141), [Start1997]_, eq. (3.16, 3.17)

.. math::
    :label: D.wfs.ps.2.5D.refline

    D_\text{2.5D}(\x_0,\w) =
        \frac{1}{\sqrt{2\pi}} A(\w) w(\x_0) \sqrt{\i\wc}
        \sqrt{\frac{d_\text{ref}}{d_\text{ref}+d_\text{s}}}
        \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^{\frac{3}{2}}}
        \e{-\i\wc |\x_0-\xs|},

which is the traditional formulation of a point source in |WFS| as given by eq.
(2.27) in [Verheijen1997]_ [#F6]_. Now :math:`d_\text{ref}` is the distance of a
line parallel to the secondary source distribution and :math:`d_\text{s}` the
shortest possible distance from the point source to the linear secondary source
distribution.

The default |WFS| driving functions for a point source in the SFS Toolbox are
:eq:`D.wfs.ps` and :eq:`D.wfs.ps.2.5D`.  Transferring both to the temporal
domain via an inverse Fourier transform :eq:`ifft` it follows

.. math::
    :label: d.wfs.ps

    d(\x_0,t) = \frac{1}{2{\pi}} a(t) * h(t) * w(\x_0)
        \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^2}
        \dirac{t-\frac{|\x_0-\xs|}{c}},

.. math::
    :label: d.wfs.ps.2.5D

    d_\text{2.5D}(\x_0,t) =
        \frac{1}{\sqrt{2\pi}} a(t) * h_\text{2.5D}(t) * w(\x_0)
        \sqrt{\frac{|\xref-\x_0|}{|\x_0-\xs|+|\xref-\x_0|}} \\
        \cdot \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^{\frac{3}{2}}}
        \dirac{t-\frac{|\x_0-\xs|}{c}},

.. math::
    :label: d.wfs.ps.2.5D.refline

    d_\text{2.5D}(\x_0,t) =
        \frac{1}{\sqrt{2\pi}} a(t) * h_\text{2.5D}(t) * w(\x_0)
        \sqrt{\frac{d_\text{ref}}{d_\text{ref}+d_\text{s}}}
        \cdot \frac{\scalarprod{\x_0-\xs}{\n_{\x_0}}}{|\x_0-\xs|^{\frac{3}{2}}}
        \dirac{t-\frac{|\x_0-\xs|}{c}}.

The window function :math:`w(\x_0)` for a point source as source model can be
calculated after [Spors2008]_ as

.. math::
    :label: wfs.ps.selection

    w(\x_0) = 
        \begin{cases}
            1 & \scalarprod{\x_0-\xs}{\n_{\x_0}} > 0 \\
            0 & \text{else}
        \end{cases}


.. vim: filetype=rst spell:
