.. _sec-plane-wave:

Plane Wave
~~~~~~~~~~

.. plot::
    :context: close-figs

    nk = sfs.util.direction_vector(np.radians(45))  # direction of plane wave
    xs = 0, 0, 0  # center of plane wave
    omega = 2 * np.pi * 800  # frequency
    grid = sfs.util.xyz_grid([-1.75, 1.75], [-1.75, 1.75], 0, spacing=0.02)
    p = sfs.mono.source.plane(omega, xs, nk, grid)
    sfs.plot.soundfield(p, grid);

.. _fig-plane-wave:

.. figure:: ../img/placeholder.png
    :align: center

    Sound pressure for a monochromatic plane wave :eq:`S.pw` going into the direction
    :math:`(1, 1, 0)`. Parameters: :math:`f = 800` Hz.

The source model for a plane wave is given as [Williams1999]_, eq. (2.24) [#F5]_

.. math::
    :label: S.pw

    S(\x,\w) = A(\w) \e{-\i\wc \scalarprod{\n_k}{\x}},

where :math:`A(\w)` denotes the frequency spectrum of the source and
:math:`\n_k` a unit vector pointing into the direction of the plane wave.

Transformed in the temporal domain this becomes

.. math::
    :label: s.pw

    s(\x,t) = a(t) * \dirac{t -\frac{\scalarprod{\n_k}{\x}}{c}},

where :math:`a(t)` is the Fourier transformation of the frequency spectrum
:math:`A(\w)`.

The expansion coefficients for spherical basis functions are given as
[Ahrens2012]_, eq. (2.38)

.. math::
    :label: plane-wave-spherical-coefficients

    \breve{S}_n^m(\theta_k,\phi_k,\w) = 4\pi\i^{-n}
        Y_n^{-m}(\theta_k,\phi_k),

where :math:`(\phi_k,\theta_k)` is the radiating direction of the plane wave.

In a similar manner the expansion coefficients for circular basis functions are
given as

.. math::
    :label: plane-wave-circular-coefficients

    \breve{S}_m(\phi_\text{s},\w) = \i^{-n}
        \Phi_{-m}(\phi_\text{s}).

The expansion coefficients for linear basis functions are given as after
[Ahrens2012]_, eq. (C.5)

.. math::
    :label: plane-wave-linear-coefficients

    \breve{S}(k_x,y,\w) = 2\pi\dirac{k_x-k_{x,\text{s}}}
        \chi(k_{y,\text{s}},y),

where :math:`(k_{x,\text{s}},k_{y,\text{s}})` points into the radiating
direction of the plane wave.


.. vim: filetype=rst spell:
